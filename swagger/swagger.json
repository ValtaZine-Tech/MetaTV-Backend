{
  "openapi": "3.0.0",
  "info": {
    "title": "MetaTV API",
    "version": "1.0.0",
    "description": "API for managing TV content and videos",
    "contact": {
      "name": "API Support",
      "email": "support@metatv.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5050/api/v1",
      "description": "Local development server"
    },
    {
      "url": "https://api.metatv.com/v1",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Videos",
      "description": "Operations related to video content"
    }
  ],
  "paths": {
    "/api/v1/videos": {
      "get": {
        "tags": ["Videos"],
        "summary": "Get all approved videos",
        "description": "Returns a paginated list of approved videos",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort field (createdAt, views)",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            }
          },
          {
            "name": "approved",
            "in": "query",
            "description": "Filter by approval status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Videos"],
        "summary": "Create a new video entry",
        "description": "Add a new video to the system",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Video created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Video": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "example": "Sample Video Title"
          },
          "description": {
            "type": "string",
            "example": "Sample video description"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/video.mp4"
          },
          "approved": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VideoInput": {
        "type": "object",
        "required": ["title", "url"],
        "properties": {
          "title": {
            "type": "string",
            "minLength": 5,
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "maxLength": 500
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "VideoListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "totalItems": {
                "type": "integer"
              },
              "totalPages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
      }
    }
  }
}